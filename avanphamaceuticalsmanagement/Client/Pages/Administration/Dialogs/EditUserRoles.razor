@using Microsoft.AspNetCore.Identity;
@using avanphamaceuticalsmanagement.Client.Services.Interfaces;
@using avanphamaceuticalsmanagement.Shared.IdentityModel;
@inherits Admin
<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12" md="6">
                <MudTextField @bind-Value="User.Id" ReadOnly="true" Label="User Id" AdornmentIcon="@Icons.Material.Filled.PermIdentity" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudItem xs="12" md="6">
                <MudTextField @bind-Value="User.UserName" ReadOnly="true" Label="UserName" AdornmentIcon="@Icons.Material.Filled.Person" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudItem xs="12" md="6">
                <MudTextField @bind-Value="User.Email" ReadOnly="true" Label="Email" AdornmentIcon="@Icons.Material.Filled.Email" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudItem xs="12" md="6">
                <MudSelect T="string" @bind-Value="viewModel.RoleName" Variant="Variant.Outlined" Margin="Margin.Dense" Placeholder="Roles" Label="Select Role">
                    @foreach (var item in roles)
                    {
                        <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12" md="6">
                <InputFile id="fileInput" OnChange="UploadFiles" hidden multiple />

                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           for="fileInput">
                    Upload Profile Picture
                </MudButton>


                @if (files != null)
                {
                    <MudText>@files.Count() image/Images Added</MudText>
                }
                else
                {
                    <MudText>No File</MudText>
                }


            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButtonGroup OverrideStyles="false">
            <MudButton ButtonType="ButtonType.Button" StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Error" Variant="Variant.Filled" OnClick="CloseDialog">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Button" StartIcon="@Icons.Material.Filled.Save" Color="Color.Success" Variant="Variant.Filled" OnClick="async () => await UpdateUser(User.Id,viewModel)">Submit</MudButton>
        </MudButtonGroup>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public ApplicationUser User { get; set; } = new();
    protected UserViewModel viewModel = new();
    [Inject] HttpClient HttpClient { get; set; }
    [Inject] IGenericService GenericService { get; set; }
    IList<IBrowserFile> files = new List<IBrowserFile>();
    public ApplicationUser CustomUser = new();
    public UserManager<ApplicationUser> _userManager { get; set; } 
    string pic = string.Empty;
    #region File Upload

    private async void UploadFiles(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        foreach (var file in e.GetMultipleFiles(10))
        {
            var resizeImage = await file.RequestImageFileAsync(format, 200, 200);
            var buffer = new byte[resizeImage.Size];
            await resizeImage.OpenReadStream().ReadAsync(buffer);
            var Imagedata = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            pic = Imagedata;
        }
    }
    #endregion

    protected async Task CommitUpdate()
    {
        await SaveProfilePicture(pic, User);
    }

    protected async Task UpdateUser(string id, UserViewModel user)
    {
        user.UserName = User.UserName;
        user.Id = User.Id;
        user.Email = User.Email;
        user.Roles.Add(user.RoleName);
        await CommitUpdate();
        await HttpClient.PutAsJsonAsync($"api/Admin/{id}/roles", user.Roles);
        Snackbar.Add($"{User.UserName} Successfully Added to Role {viewModel.RoleName}", Severity.Success);

        CloseDialog();
        await GetAllUsersAsync();

    }
}
